//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace InforoomOnline.Tests.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IInforoomOnlineService", Namespace="http://tempuri.org/")]
    public partial class InforoomOnlineService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOffersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPriceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNamesFromCatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostOrderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InforoomOnlineService() {
            this.Url = global::InforoomOnline.Tests.Properties.Settings.Default.InforoomOnline_Tests_localhost_InforoomOnlineService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOffersCompletedEventHandler GetOffersCompleted;
        
        /// <remarks/>
        public event GetPriceListCompletedEventHandler GetPriceListCompleted;
        
        /// <remarks/>
        public event GetNamesFromCatalogCompletedEventHandler GetNamesFromCatalogCompleted;
        
        /// <remarks/>
        public event PostOrderCompletedEventHandler PostOrderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IInforoomOnlineService/GetOffers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetOffers([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] rangeField, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] rangeValue, bool newEar, [System.Xml.Serialization.XmlIgnoreAttribute()] bool newEarSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] sortField, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] sortOrder, int limit, [System.Xml.Serialization.XmlIgnoreAttribute()] bool limitSpecified, int selStart, [System.Xml.Serialization.XmlIgnoreAttribute()] bool selStartSpecified) {
            object[] results = this.Invoke("GetOffers", new object[] {
                        rangeField,
                        rangeValue,
                        newEar,
                        newEarSpecified,
                        sortField,
                        sortOrder,
                        limit,
                        limitSpecified,
                        selStart,
                        selStartSpecified});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOffersAsync(string[] rangeField, string[] rangeValue, bool newEar, bool newEarSpecified, string[] sortField, string[] sortOrder, int limit, bool limitSpecified, int selStart, bool selStartSpecified) {
            this.GetOffersAsync(rangeField, rangeValue, newEar, newEarSpecified, sortField, sortOrder, limit, limitSpecified, selStart, selStartSpecified, null);
        }
        
        /// <remarks/>
        public void GetOffersAsync(string[] rangeField, string[] rangeValue, bool newEar, bool newEarSpecified, string[] sortField, string[] sortOrder, int limit, bool limitSpecified, int selStart, bool selStartSpecified, object userState) {
            if ((this.GetOffersOperationCompleted == null)) {
                this.GetOffersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOffersOperationCompleted);
            }
            this.InvokeAsync("GetOffers", new object[] {
                        rangeField,
                        rangeValue,
                        newEar,
                        newEarSpecified,
                        sortField,
                        sortOrder,
                        limit,
                        limitSpecified,
                        selStart,
                        selStartSpecified}, this.GetOffersOperationCompleted, userState);
        }
        
        private void OnGetOffersOperationCompleted(object arg) {
            if ((this.GetOffersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOffersCompleted(this, new GetOffersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IInforoomOnlineService/GetPriceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetPriceList([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] firmName) {
            object[] results = this.Invoke("GetPriceList", new object[] {
                        firmName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPriceListAsync(string[] firmName) {
            this.GetPriceListAsync(firmName, null);
        }
        
        /// <remarks/>
        public void GetPriceListAsync(string[] firmName, object userState) {
            if ((this.GetPriceListOperationCompleted == null)) {
                this.GetPriceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPriceListOperationCompleted);
            }
            this.InvokeAsync("GetPriceList", new object[] {
                        firmName}, this.GetPriceListOperationCompleted, userState);
        }
        
        private void OnGetPriceListOperationCompleted(object arg) {
            if ((this.GetPriceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPriceListCompleted(this, new GetPriceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IInforoomOnlineService/GetNamesFromCatalog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetNamesFromCatalog([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] name, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] form, bool offerOnly, [System.Xml.Serialization.XmlIgnoreAttribute()] bool offerOnlySpecified, int limit, [System.Xml.Serialization.XmlIgnoreAttribute()] bool limitSpecified, int selStart, [System.Xml.Serialization.XmlIgnoreAttribute()] bool selStartSpecified) {
            object[] results = this.Invoke("GetNamesFromCatalog", new object[] {
                        name,
                        form,
                        offerOnly,
                        offerOnlySpecified,
                        limit,
                        limitSpecified,
                        selStart,
                        selStartSpecified});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNamesFromCatalogAsync(string[] name, string[] form, bool offerOnly, bool offerOnlySpecified, int limit, bool limitSpecified, int selStart, bool selStartSpecified) {
            this.GetNamesFromCatalogAsync(name, form, offerOnly, offerOnlySpecified, limit, limitSpecified, selStart, selStartSpecified, null);
        }
        
        /// <remarks/>
        public void GetNamesFromCatalogAsync(string[] name, string[] form, bool offerOnly, bool offerOnlySpecified, int limit, bool limitSpecified, int selStart, bool selStartSpecified, object userState) {
            if ((this.GetNamesFromCatalogOperationCompleted == null)) {
                this.GetNamesFromCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNamesFromCatalogOperationCompleted);
            }
            this.InvokeAsync("GetNamesFromCatalog", new object[] {
                        name,
                        form,
                        offerOnly,
                        offerOnlySpecified,
                        limit,
                        limitSpecified,
                        selStart,
                        selStartSpecified}, this.GetNamesFromCatalogOperationCompleted, userState);
        }
        
        private void OnGetNamesFromCatalogOperationCompleted(object arg) {
            if ((this.GetNamesFromCatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNamesFromCatalogCompleted(this, new GetNamesFromCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IInforoomOnlineService/PostOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet PostOrder([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)] long[] offerId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)] int[] quantity, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] message) {
            object[] results = this.Invoke("PostOrder", new object[] {
                        offerId,
                        quantity,
                        message});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PostOrderAsync(long[] offerId, int[] quantity, string[] message) {
            this.PostOrderAsync(offerId, quantity, message, null);
        }
        
        /// <remarks/>
        public void PostOrderAsync(long[] offerId, int[] quantity, string[] message, object userState) {
            if ((this.PostOrderOperationCompleted == null)) {
                this.PostOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostOrderOperationCompleted);
            }
            this.InvokeAsync("PostOrder", new object[] {
                        offerId,
                        quantity,
                        message}, this.PostOrderOperationCompleted, userState);
        }
        
        private void OnPostOrderOperationCompleted(object arg) {
            if ((this.PostOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostOrderCompleted(this, new PostOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOffersCompletedEventHandler(object sender, GetOffersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOffersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOffersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPriceListCompletedEventHandler(object sender, GetPriceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPriceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPriceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNamesFromCatalogCompletedEventHandler(object sender, GetNamesFromCatalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNamesFromCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNamesFromCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PostOrderCompletedEventHandler(object sender, PostOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591